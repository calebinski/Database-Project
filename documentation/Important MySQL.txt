-------Table Creation---------
CREATE TABLE User (
    user_id INT,
    username VARCHAR (128),
    password VARCHAR(128),
    PRIMARY KEY(user_id)
);

CREATE TABLE Team (
    Team_ID INT,
    Team_Name VARCHAR(64),
    Owner_ID INT,
    PRIMARY KEY(team_id),
    FOREIGN KEY (Owner_ID) REFERENCES User(User_ID)
);

CREATE TABLE member (
    user_id INT,
    team_id INT,
    Active_Character VARCHAR(32),
    FOREIGN KEY (user_id) REFERENCES User(user_id),
    FOREIGN KEY (team_id) REFERENCES Team(team_id)
);

CREATE TABLE Player_Character(
    Owner_ID INT,
    Character_Name VARCHAR(128),
    Character_Class VARCHAR(128),
    Character_Level INT,
    Intellect INT,
    Strength INT,
    Agility INT,
    Stamina INT,
    Armor INT,
    Magic_resist INT,
    PRIMARY KEY(name),
    FOREIGN KEY (Owner_ID) REFERENCES User(User_ID)
);

CREATE TABLE Gear (
    Gear_ID INT,
    Gear_Name VARCHAR(128),
    Gear_Type VARCHAR(128),
    intellect INT,
    strength INT,
    agility INT,
    stamina INT,
    armor INT,
    magic_resist INT,
    PRIMARY KEY(Gear_ID)
);

CREATE TABLE Equipped_Gear(
    User_ID INT,
    Character_Name VARCHAR(32),
    Gear_ID INT,
    Gear_Type VARCHAR(16),
    FOREIGN KEY (User_ID) REFERENCES Player_Character(Owner_ID),
    FOREIGN KEY (Character_Name) REFERENCES Player_Character(Character_Name),
    FOREIGN KEY (Gear_ID) REFERENCES Gear(Gear_ID)
);

CREATE TABLE Enemy (
    Enemy_ID INT,
    Enemy_Name VARCHAR(128),
    Enemy_Type VARCHAR(128),
    intellect INT,
    strength INT,
    agility INT,
    stamina INT,
    armor INT,
    magic_resist INT,
    PRIMARY KEY(Enemy_ID)
);
------------------------------------------

--------Stored Procedures-----------------
DELIMITER @@
DROP PROCEDURE AddCharacter @@
CREATE PROCEDURE dbapp.AddCharacter
(IN ownerID INT, IN charName VARCHAR(32), IN character_level INT, IN character_class VARCHAR(128), IN intellect INT, IN strength INT, IN agility INT, IN stamina INT, IN armor INT, IN magic_resist INT)
BEGIN
		INSERT INTO player_character
			(Owner_ID, Character_Name, Character_Level, Character_Class, Intellect, Strength, Agility, Stamina, Armor, Magic_Resist)
		VALUES
			(ownerID, charName, character_level, character_class, intellect, strength, agility, stamina, armor, magic_resist);
    END @@ 
DELIMITER ; 

DELIMITER @@
DROP PROCEDURE CreateTeam @@
CREATE PROCEDURE dbapp.CreateTeam
(IN teamName VARCHAR(64), IN ownerID INT)
BEGIN
		INSERT INTO team
			(Team_Name, Owner_ID)
		VALUES
			(teamName, ownerID);
    END @@ 
DELIMITER ; 

DELIMITER @@
DROP PROCEDURE DeleteCharacter @@
CREATE PROCEDURE dbapp.DeleteCharacter
(IN userID INT, IN charName VARCHAR(32))
BEGIN	
		DELETE FROM Member
		WHERE Active_Character = charName AND User_ID = userID;
                
		DELETE FROM Equipped_gear
		WHERE User_ID = userID AND Character_Name = charName;
		
                DELETE FROM Player_character
		WHERE Player_Character.Owner_ID = userID AND Player_Character.Character_Name = charName;
    END @@ 
DELIMITER ; 

DELIMITER @@
DROP PROCEDURE DeleteTeam @@
CREATE PROCEDURE dbapp.DeleteTeam
(IN teamName VARCHAR(64))
BEGIN
        DELETE Member
        FROM Member
	INNER JOIN Team ON Member.Team_ID = Team.Team_ID
	WHERE Team.Team_Name = teamName;

        DELETE FROM Team
        WHERE Team_Name = teamName;
    END @@ 
DELIMITER ; 

DELIMITER @@
DROP PROCEDURE EditCharacter @@
CREATE PROCEDURE dbapp.EditCharacter
(IN userID INT, IN newCharName VARCHAR(32), IN oldCharName VARCHAR(32), IN charLevel INT, IN charClass VARCHAR(16), IN intellect INT, IN strength INT, IN agility INT, IN stamina INT, IN armor INT, IN magicResist INT)
BEGIN
		UPDATE player_character
		SET	Character_Name = newCharName,
                        Character_Level = charLevel,
			Character_Class = charClass,
			Intellect = intellect,
			Strength = strength,
			Agility = agility,
			Stamina = stamina,
			Armor = armor,
			Magic_Resist = magicResist
		WHERE Owner_ID = userID AND Character_Name = oldCharName;
    END @@ 
DELIMITER ; 

DELIMITER @@
DROP PROCEDURE EditTeamName @@
CREATE PROCEDURE dbapp.EditTeamName
(IN oldTeamName VARCHAR(64), IN newTeamName VARCHAR(64))
BEGIN
		UPDATE team
		SET Team_Name = newTeamName
		WHERE Team_Name = oldTeamName;
    END @@ 
DELIMITER ; 

DELIMITER @@
DROP PROCEDURE EditTeamOwner @@
CREATE PROCEDURE dbapp.EditTeamOwner
(IN newOwnerID INT, IN oldOwnerID INT, IN teamID INT)
BEGIN
		UPDATE team
		SET Owner_ID = newOwnerID
		WHERE Owner_ID = oldOwnerID AND Team_ID = teamID;
    END @@ 
DELIMITER ; 

DELIMITER @@
DROP PROCEDURE GetCharacterGear @@
CREATE PROCEDURE dbapp.GetCharacterGear
(IN userID INT, IN charName VARCHAR(32))
BEGIN
        SELECT User_ID, Character_Name, Gear_Name, Equipped_Gear.Gear_Type, Intellect, Strength, Agility, Stamina, Armor, Magic_Resist
        FROM Equipped_Gear
        INNER JOIN Gear ON Equipped_Gear.Gear_ID = Gear.Gear_ID
        WHERE Equipped_Gear.User_ID = userID AND Equipped_Gear.Character_Name = charName;
    END @@ 
DELIMITER ; 

DELIMITER @@
DROP PROCEDURE GetCharacterNamesByID @@
CREATE PROCEDURE dbapp.GetCharacterNamesByID
(IN userID INT)
BEGIN
		SELECT Character_Name
		FROM player_character
		WHERE Owner_ID = userID;
    END @@ 
DELIMITER ; 

DELIMITER @@
DROP PROCEDURE GetCharacterStats @@
CREATE PROCEDURE dbapp.GetCharacterStats
(IN givenID INT, IN givenName VARCHAR(32))
BEGIN

DECLARE TempInt INT;
DECLARE TempStr INT;
DECLARE TempAgi INT;
DECLARE TempSta INT;
DECLARE TempArm INT;
DECLARE TempMar INT;
     

SELECT sum(((gear.Intellect / 100 * player_character.Intellect))) + player_character.Intellect AS intellect_total
INTO TempInt
FROM player_character
INNER JOIN equipped_gear
ON player_character.Owner_ID = equipped_gear.User_ID AND equipped_gear.Character_Name = player_character.Character_Name
INNER JOIN gear
ON equipped_gear.Gear_ID = gear.Gear_ID
WHERE Owner_ID = givenID AND Player_Character.Character_Name = givenName
group by player_character.Owner_ID, player_character.Character_Name;


SELECT sum(((gear.strength / 100 * player_character.strength))) + player_character.strength AS strength_total
INTO TempStr
FROM player_character
INNER JOIN equipped_gear
ON player_character.Owner_ID = equipped_gear.User_ID AND equipped_gear.Character_Name = player_character.Character_Name
INNER JOIN gear
ON equipped_gear.Gear_ID = gear.Gear_ID
WHERE Owner_ID = givenID AND Player_Character.Character_Name = givenName
group by player_character.Owner_ID, player_character.Character_Name;


SELECT sum(((gear.agility / 100 * player_character.agility))) + player_character.agility AS agility_total
INTO TempAgi
FROM player_character
INNER JOIN equipped_gear
ON player_character.Owner_ID = equipped_gear.User_ID AND equipped_gear.Character_Name = player_character.Character_Name
INNER JOIN gear
ON equipped_gear.Gear_ID = gear.Gear_ID
WHERE Owner_ID = givenID AND Player_Character.Character_Name = givenName
group by player_character.Owner_ID, player_character.Character_Name;


SELECT sum(((gear.stamina / 100 * player_character.stamina))) + player_character.stamina AS stamina_total
INTO TempSta
FROM player_character
INNER JOIN equipped_gear
ON player_character.Owner_ID = equipped_gear.User_ID AND equipped_gear.Character_Name = player_character.Character_Name
INNER JOIN gear
ON equipped_gear.Gear_ID = gear.Gear_ID
WHERE Owner_ID = givenID AND Player_Character.Character_Name = givenName
group by player_character.Owner_ID, player_character.Character_Name;


SELECT gear.armor + player_character.armor AS armor_total
INTO TempArm
FROM player_character
INNER JOIN equipped_gear
ON player_character.Owner_ID = equipped_gear.User_ID AND equipped_gear.Character_Name = player_character.Character_Name
INNER JOIN gear
ON equipped_gear.Gear_ID = gear.Gear_ID
WHERE Owner_ID = givenID AND Player_Character.Character_Name = givenName
group by player_character.Owner_ID, player_character.Character_Name;


SELECT gear.magic_resist + player_character.magic_resist AS magic_resist_total
INTO TempMar
FROM player_character
INNER JOIN equipped_gear
ON player_character.Owner_ID = equipped_gear.User_ID AND equipped_gear.Character_Name = player_character.Character_Name
INNER JOIN gear
ON equipped_gear.Gear_ID = gear.Gear_ID
WHERE Owner_ID = givenID AND Player_Character.Character_Name = givenName
group by player_character.Owner_ID, player_character.Character_Name;

SELECT TempInt AS Intellect, TempStr AS Strength, TempAgi AS Agility, TempSta AS Stamina, TempArm AS Armor, TempMar AS Magic_Resist;

END @@ 
DELIMITER ; 

DELIMITER @@
DROP PROCEDURE GetEnemiesByType @@
CREATE PROCEDURE dbapp.GetEnemiesByType
(IN type VARCHAR(16))
BEGIN
		SELECT Enemy_ID, Enemy_Name, Enemy_Type, Intellect, Strength, Agility, Stamina, Armor, Magic_Resist
		FROM Enemy
		WHERE Enemy_Type = type;
    END @@ 
DELIMITER ; 

DELIMITER @@
DROP PROCEDURE GetEnemyNamesByType @@
CREATE PROCEDURE dbapp.GetEnemyNamesByType
(IN type VARCHAR(16))
BEGIN
		SELECT Enemy_Name
		FROM enemy
		WHERE Enemy_Type = type;
    END @@ 
DELIMITER ; 

DELIMITER @@
DROP PROCEDURE GetGearByType @@
CREATE PROCEDURE dbapp.GetGearByType
(IN type VARCHAR(16))
BEGIN
		SELECT Gear_Name, Gear_Type, Intellect, Strength, Agility, Stamina, Armor, Magic_Resist
		FROM gear
		WHERE Gear_Type = type;
    END @@ 
DELIMITER ; 

DELIMITER @@
DROP PROCEDURE GetGearNamesByType @@
CREATE PROCEDURE dbapp.GetGearNamesByType
(IN type VARCHAR(16))
BEGIN
		SELECT Gear_Name
		FROM gear
		WHERE Gear_Type = type;
    END @@ 
DELIMITER ; 

DELIMITER @@
DROP PROCEDURE GetTeamMembers @@
CREATE PROCEDURE dbapp.GetTeamMembers
(IN teamName VARCHAR(64))
BEGIN
        SELECT Username, Active_Character
        FROM Member
        INNER JOIN Team ON Member.Team_ID = Team.Team_ID
        INNER JOIN User ON Member.User_ID = User.User_ID
        WHERE Team.Team_Name = teamName;
    END @@ 
DELIMITER ; 

DELIMITER @@
DROP PROCEDURE GetTeamNames @@
CREATE PROCEDURE dbapp.GetTeamNames
()
BEGIN
		SELECT Team_Name
		FROM team;
    END @@ 
DELIMITER ; 

DELIMITER @@
DROP PROCEDURE GetTeamNamesByMember @@
CREATE PROCEDURE dbapp.GetTeamNamesByMember
(IN userid VARCHAR(5))
BEGIN
		SELECT Team_Name
		FROM team 
		INNER JOIN member ON team.Team_ID = member.Team_ID
		WHERE member.User_ID = userid;
    END @@ 
DELIMITER ; 

DELIMITER @@
DROP PROCEDURE GetTeamNamesByOwner @@
CREATE PROCEDURE dbapp.GetTeamNamesByOwner
(IN ownerid VARCHAR(5))
BEGIN
		SELECT Team_Name
		FROM team 
		WHERE Owner_ID = ownerid;
    END @@ 
DELIMITER ; 

DELIMITER @@
DROP PROCEDURE GetTeams @@
CREATE PROCEDURE dbapp.GetTeams
()
BEGIN
		SELECT team.Team_Name, member.Active_Character
		FROM team
		INNER JOIN user ON user.User_ID = team.Owner_ID
		INNER JOIN member ON member.Team_ID = team.Team_ID;
    END @@ 
DELIMITER ; 

DELIMITER @@
DROP PROCEDURE GetTeamsByOwnerID @@
CREATE PROCEDURE dbapp.GetTeamsByOwnerID
(IN ownerID INT)
BEGIN
		SELECT team.Team_Name, member.Active_Character
		FROM team
		INNER JOIN user ON user.User_ID = team.Owner_ID
		INNER JOIN member ON member.Team_ID = team.Team_ID
		WHERE team.Owner_ID = ownerID;
    END @@ 
DELIMITER ; 

DELIMITER @@
DROP PROCEDURE GetTeamsByUserID @@
CREATE PROCEDURE dbapp.GetTeamsByUserID
(IN userID INT)
BEGIN
		SELECT team.Team_Name, member.Active_Character
		FROM team
		INNER JOIN user ON user.User_ID = team.Owner_ID
		INNER JOIN member ON member.Team_ID = team.Team_ID
		WHERE member.User_ID = userID;
    END @@ 
DELIMITER ; 

DELIMITER @@
DROP PROCEDURE JoinTeam @@
CREATE PROCEDURE dbapp.JoinTeam
(IN teamID INT, IN userID INT, IN characterName VARCHAR(32))
BEGIN
		INSERT INTO member
			(Team_ID, User_ID, Active_Character)
		VALUES
			(teamID, userID, characterName);
    END @@ 
DELIMITER ; 

DELIMITER @@
DROP PROCEDURE RemoveTeamMember @@
CREATE PROCEDURE dbapp.RemoveTeamMember
(IN teamID INT, IN charName VARCHAR(32))
BEGIN
     		DELETE FROM member
		WHERE Team_ID = teamID AND Active_Character = charName;
    END @@ 
DELIMITER ; 

--------------------------------------------
